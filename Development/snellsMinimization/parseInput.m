%% Inupt Parsing
p = inputParser;
addRequired(p,'x0',...
    @(x) isnumeric(x) && isvector(x))
addOptional(p,'LogOutput',false,...
    @(x) islogical(x))
addOptional(p,'MaxIterations',500,...
    @(x) isnumeric(x) && isscalar(x) && x>0)
addOptional(p,'ResetTolerance',0.01,...
    @(x) isnumeric(x) && isscalar(x) && x>0)
addOptional(p,'FunctionConvergence',1e-6,...
    @(x) isnumeric(x) && isscalar(x) && x>=0)
addOptional(p,'GradientConvergence',1e-6,...
    @(x) isnumeric(x) && isscalar(x) && x>=0)
addOptional(p,'StepTimeout',1000,...
    @(x) isnumeric(x) && isscalar(x))
addOptional(p,'StepSizeMultiplier',2,...
    @(x) isnumeric(x) && isscalar(x)  && x>=1)
addOptional(p,'BoundingTimeout',1000,...
    @(x) isnumeric(x) && isscalar(x))
addOptional(p,'FunctionHandle',...
    @objJ,@(x) isa(x,'function_handle'))
addOptional(p,'GradientFunctionHandle',...
    @gradObjF,@(x) isa(x,'function_handle'))
addOptional(p,'GradientMethod','Analytical',...
    @(x) any(strcmpi(x,{'Analytical','ForwardDifference','CentralDifference'})))
addOptional(p,'StepSizes',ones(size(x0)),...
    @(x) isnumeric(x) && isvector(x))
addOptional(p,'LineSearchMethod','GoldenSection',...
    @(x) any(strcmpi(x,{'ThreePoint','GoldenSection'})))
addOptional(p,'StepSize',0.0000001,...
    @(x) isnumeric(x) && isscalar(x) && x>0)
parse(p,x0,varargin{:})